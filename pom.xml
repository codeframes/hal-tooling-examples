<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2016 Richard Burrow (https://github.com/codeframes)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.codeframes</groupId>
    <artifactId>hal-tooling-examples</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <name>HAL Tooling Examples</name>
    <description>Parent pom for HAL Tooling Example projects.</description>
    <url>https://github.com/codeframes/hal-tooling-examples</url>
    <inceptionYear>2016</inceptionYear>

    <organization>
        <name>Code:Frames</name>
        <url>https://github.com/codeframes</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/codeframes/hal-tooling-examples</url>
        <connection>scm:git:git://github.com/codeframes/hal-tooling-examples.git</connection>
        <developerConnection>scm:git:git://github.com/codeframes/hal-tooling-examples.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/codeframes/hal-tooling-examples/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <name>Richard Burrow</name>
            <email>rojb@hotmail.co.uk</email>
        </developer>
    </developers>

    <prerequisites>
        <maven>3.0.5</maven>
    </prerequisites>

    <modules>
        <module>hal-tooling-example</module>
    </modules>

    <properties>
        <java.version>1.7</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Test Dependency Versioning -->
        <groovy-all.version>2.4.5</groovy-all.version>
        <spock-core.version>1.0-groovy-2.4</spock-core.version>

        <!-- Core Plugin Versioning -->
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.19</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.19</maven-surefire-plugin.version>

        <!-- 3rd Party Plugin Versioning -->
        <build-helper-maven-plugin.version>1.10</build-helper-maven-plugin.version>
        <gmavenplus-plugin.version>1.5</gmavenplus-plugin.version>
        <license-maven-plugin.version>3.0.rc1</license-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy-all.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock-core.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--
                Maven Core Plugins
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <executions>
                        <!--
                            Ensures that both integration-test and verify goals of the Failsafe Maven
                            plugin are executed.
                        -->
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <includes>
                                    <include>**/*ITest.class</include>
                                </includes>
                                <!-- Sets the VM argument line used when integration tests are run. -->
                                <!--suppress MavenModelInspection -->
                                <argLine>${failsafeArgLine}</argLine>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!-- Sets the VM argument line used when unit tests are run. -->
                        <!--suppress MavenModelInspection -->
                        <argLine>${surefireArgLine}</argLine>
                        <!-- Excludes integration tests when unit tests are run. -->
                        <excludes>
                            <exclude>**/*ITest.class</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!--
                3rd Party Plugins
                -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${gmavenplus-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <testSources>
                                    <testSource>
                                        <directory>${project.basedir}/src/itest/groovy</directory>
                                        <includes>
                                            <include>**/*.groovy</include>
                                        </includes>
                                    </testSource>
                                </testSources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <configuration>
                        <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                            <groovy>SLASHSTAR_STYLE</groovy>
                        </mapping>
                        <properties>
                            <owner>Richard Burrow</owner>
                            <email>${project.organization.url}</email>
                        </properties>
                        <excludes>
                            <exclude>README.md</exclude>
                            <exclude>LICENSE</exclude>
                            <exclude>src/main/resources/**</exclude>
                            <exclude>src/test/resources/**</exclude>
                            <exclude>src/itest/resources/**</exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>license-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>license-header-check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>